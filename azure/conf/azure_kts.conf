#
# Copyright (c) 2016 Cloudera, Inc. All rights reserved.
#

name: ${CLUSTER_NAME}

environmentName: ${ENVIRONMENT_NAME}

deploymentName: ${CLOUDERA_MANAGER_NAME}

provider {
    type: azure
    region: ${AZURE_REGION}
    mgmtUrl: "https://management.core.windows.net/"
    subscriptionId: ${AZURE_SUBSCRIPTION_ID}
    aadUrl: "https://login.windows.net/"
    tenantId: ${AZURE_TENANT_ID}
    clientId: ${AZURE_CLIENT_ID}
    clientSecret: ${AZURE_CLIENT_SECRET}
}

ssh {
    username: ${SSH_USERNAME}
    privateKey: ${SSH_PEM_PATH}
}

common-instanceTemplate {

    # Config fields for kts nodes
    kts {
        type: ${AZURE_KTS_NODE_SIZE}
        image: ${AZURE_OS}
        networkSecurityGroupResourceGroup: ${AZURE_NETWORK_SG_RG}
        networkSecurityGroup: ${AZURE_NETWORK_SG}
        virtualNetworkResourceGroup: ${AZURE_VNET_RG}
        virtualNetwork: ${AZURE_VNET}
        subnetName: ${AZURE_SUBNET}
        hostFqdnSuffix: ${DOMAIN}
        computeResourceGroup: ${AZURE_COMPUTE_RG}
        availabilitySet: ${AZURE_AVAILABILITY_SET}
        instanceNamePrefix: ${AZURE_KTS_NAME_PREFIX}
        storageAccountType: ${AZURE_KTS_STORAGE_TYPE}
        dataDiskCount: ${AZURE_KTS_DISK_COUNT}
        dataDiskSize: ${AZURE_KTS_DISK_SIZE}
        publicIP: ${AZURE_PUBLIC_IP}
                tags {
            owner: ${TAGS_OWNER}
            project: ${TAGS_PROJECT}
        }
        bootstrapScriptsPaths: ["/home/cloudera/bootstrap_RHEL7x.sh","/home/cloudera/install_certs.sh"]
    }
}


bootstrap-script {
    os-generic : """#!/bin/sh


"""
}


#
# Instant Templates
#

instances {

    kts {
        image: ${?common-instanceTemplate.kts.image}
        type: ${?common-instanceTemplate.kts.type}
        computeResourceGroup: ${?common-instanceTemplate.kts.computeResourceGroup}
        networkSecurityGroupResourceGroup: ${?common-instanceTemplate.kts.networkSecurityGroupResourceGroup}
        networkSecurityGroup: ${?common-instanceTemplate.kts.networkSecurityGroup}
        virtualNetworkResourceGroup: ${?common-instanceTemplate.kts.virtualNetworkResourceGroup}
        virtualNetwork: ${?common-instanceTemplate.kts.virtualNetwork}
        subnetName: ${?common-instanceTemplate.kts.subnetName}
        instanceNamePrefix: ${?common-instanceTemplate.kts.instanceNamePrefix}
        hostFqdnSuffix: ${?common-instanceTemplate.kts.hostFqdnSuffix}
        availabilitySet: ${?common-instanceTemplate.kts.availabilitySet}
        publicIP: ${?common-instanceTemplate.kts.publicIP}
        storageAccountType: ${?common-instanceTemplate.kts.storageAccountType}
        dataDiskCount: ${?common-instanceTemplate.kts.dataDiskCount}
        dataDiskSize: ${?common-instanceTemplate.kts.dataDiskSize}
        tags: ${?common-instanceTemplate.kts.tags}
        bootstrapScriptsPaths: ${?common-instanceTemplate.kts.bootstrapScriptsPaths}
    }

} # End instance templates

cloudera-manager {
      instance: ${instances.kts} {
        tags {
          group: cm
        }
    }
}

cluster {

    services: [CLUSTER_SERVICES]

    kts {
      count: ${KTS_NODE_COUNT}

      instance: ${instances.kts} {
        tags {
          group: kts
        }
      }
      
      
   }
}


